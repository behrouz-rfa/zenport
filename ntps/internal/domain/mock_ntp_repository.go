// Code generated by mockery v2.16.0. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockNtpRepository is an autogenerated mock type for the NtpRepository type
type MockNtpRepository struct {
	mock.Mock
}

// AddTime provides a mock function with given fields: ctx, id, time
func (_m *MockNtpRepository) AddTime(ctx context.Context, id string, time string) error {
	ret := _m.Called(ctx, id, time)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, id, time)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockNtpRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNtpRepository creates a new instance of MockNtpRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNtpRepository(t mockConstructorTestingTNewMockNtpRepository) *MockNtpRepository {
	mock := &MockNtpRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
