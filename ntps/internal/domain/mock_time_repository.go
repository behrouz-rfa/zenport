// Code generated by mockery v2.16.0. DO NOT EDIT.

package domain

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTimeRepository is an autogenerated mock type for the TimeRepository type
type MockTimeRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, t
func (_m *MockTimeRepository) Save(ctx context.Context, t *Time) error {
	ret := _m.Called(ctx, t)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *Time) error); ok {
		r0 = rf(ctx, t)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockTimeRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockTimeRepository creates a new instance of MockTimeRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockTimeRepository(t mockConstructorTestingTNewMockTimeRepository) *MockTimeRepository {
	mock := &MockTimeRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
