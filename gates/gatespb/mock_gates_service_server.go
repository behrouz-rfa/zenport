// Code generated by mockery v2.16.0. DO NOT EDIT.

package gatespb

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockGatesServiceServer is an autogenerated mock type for the GatesServiceServer type
type MockGatesServiceServer struct {
	mock.Mock
}

// GetTime provides a mock function with given fields: _a0, _a1
func (_m *MockGatesServiceServer) GetTime(_a0 context.Context, _a1 *GetTimeRequest) (*GetTimeResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTimeResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTimeRequest) *GetTimeResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTimeResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTimeRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedGatesServiceServer provides a mock function with given fields:
func (_m *MockGatesServiceServer) mustEmbedUnimplementedGatesServiceServer() {
	_m.Called()
}

type mockConstructorTestingTNewMockGatesServiceServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockGatesServiceServer creates a new instance of MockGatesServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockGatesServiceServer(t mockConstructorTestingTNewMockGatesServiceServer) *MockGatesServiceServer {
	mock := &MockGatesServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
